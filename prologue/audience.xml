<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE section [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<section xmlns="http://docbook.org/docbook-ng"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="pre-audience">
<title>Audience</title>
<?dbhtml filename="audience.html"?>

<section>
<title>Who would want to read this book</title>

<para>There are many reasons why somebody would want to read this book. The 
principal reason being to install a Linux system straight from the source 
code. A question many people raise is <quote>Why go through all the hassle of 
manually building a Linux system from scratch when you can just download and 
install an existing one?</quote>. That is a good question and is the impetus for
this section of the book.</para>

<para>One important reason for LFS's existence is to help people learn how a 
Linux system works from the inside out. Building an LFS system helps demonstrate
to you what makes Linux tick, how things work together and depend on each 
other. One of the best things that this learning experience provides is the 
ability to customize Linux to your own tastes and needs.</para>

<para>A key benefit of LFS is that you have more control of your system
without relying on someone else's Linux implementation. With LFS, you are
in the driver's seat and dictate every aspect of your system, such as the
directory layout and bootscript setup. You also dictate where, why and how
programs are installed.</para>

<para>Another benefit of LFS is the ability to create a very compact Linux 
system. When installing a regular distribution, you are usually forced to 
install several programs which you are likely never to use. They're just 
sitting there wasting precious disk space (or worse, CPU cycles). It isn't 
difficult to build an LFS system of less than 100 MB. Does that still sound like a
lot? A few of us have been working on creating a very small embedded LFS 
system. We successfully built a system that was just enough to run the Apache 
web server with approximately 8MB of disk space used. Further stripping could 
bring that down to 5 MB or less. Try that with a regular distribution.</para>

<para>We could compare Linux distributions to a hamburger you buy at a
fast-food restaurant -- you have no idea what you are eating. LFS, on the
other hand, doesn't give you a hamburger, but the recipe to make a hamburger. 
This allows you to review it, to omit unwanted ingredients, and to
add your own ingredients which enhance the flavor of your burger. When you
are satisfied with the recipe, you go on to preparing it. You make it just
the way you like it: broil it, bake it, deep-fry it, barbecue it, or eat it
tar-tar (raw).</para>

<para>Another analogy that we can use is that of comparing LFS with a 
finished house. LFS will give you the skeletal plan of a house, but it's up 
to you to build it. You have the freedom to adjust your plans as you
go.</para>

<para>One last advantage of a custom built Linux system is security.
By compiling the entire system from source code, you are empowered to audit
everything and apply all the security patches you feel are needed. You don't 
have to wait for somebody else to compile binary packages that fix a security
hole. Unless you examine the patch and implement it yourself you have no
guarantee that the new binary package was built correctly and actually fixes the
problem (adequately).</para>

<para>There are too many good reasons to build your own LFS system for them all 
to be listed here. This section is only the tip of the iceberg.  As you 
continue in your LFS experience, you will find on your own the power that 
information and knowledge truly bring.</para>
</section>

<section>
<title>Who would not want to read this book</title>

<para>There are probably some who, for whatever reason, would feel that they do not 
want to read this book. If you do not wish to build your own Linux system from 
scratch, then you probably don't want to read this book. Our goal is to help 
you build a complete and usable foundation-level system. If you only want to 
know what happens while your computer boots, then we recommend the <quote>From 
Power Up To Bash Prompt</quote> HOWTO. The HOWTO builds a bare system which is 
similar to that of this book, but it focuses strictly on creating a system 
capable of booting to a BASH prompt.</para>

<para>While you decide which to read, consider your objective. If you wish
to build a Linux system while learning a bit along the way, then this book
is probably your best choice. If your objective is strictly educational and
you do not have any plans for your finished system, then the
<quote>From Power Up To Bash Prompt</quote> HOWTO is probably a better choice.</para>

<para>The <quote>From Power Up To Bash Prompt</quote> HOWTO is located at 
<link xlink:href="http://axiom.anu.edu.au/~okeefe/p2b/">http://axiom.anu.edu.au/~okeefe/p2b/</link> or on The Linux 
Documentation Project's website at
<link xlink:href="http://www.tldp.org/HOWTO/From-PowerUp-To-Bash-Prompt-HOWTO.html">http://www.tldp.org/HOWTO/From-PowerUp-To-Bash-Prompt-HOWTO.html</link>.</para>

</section>

</section>
