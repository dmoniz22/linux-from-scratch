<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="ch-tools-binutils-pass2" role="wrap">
<title>Binutils-&binutils-version; - Pass 2</title>
<?dbhtml filename="binutils-pass2.html"?>

<indexterm zone="ch-tools-binutils-pass2">
<primary sortas="a-Binutils">Binutils</primary>
<secondary>tools, pass 2</secondary></indexterm>

<sect2 role="package"><title/>
<xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
	href="../chapter06/binutils.xml"
	xpointer="xpointer(/sect1/sect2[1]/para[1])"/>

<segmentedlist>
<segtitle>&buildtime;</segtitle>
<segtitle>&diskspace;</segtitle>
<seglistitem><seg>1.5 SBU</seg><seg>108 MB</seg></seglistitem>
</segmentedlist>

<xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
	href="../chapter06/binutils.xml"
	xpointer="xpointer(/sect1/sect2[1]/segmentedlist[2])"/>

</sect2>

<sect2 role="installation">
<title>Re-installation of Binutils</title>

<para>This package is known to have issues when its default
optimization flags (including the <parameter>-march</parameter> and
<parameter>-mcpu</parameter> options) are changed. If any environment
variables that override default optimizations have been defined, such
as <envar>CFLAGS</envar> and <envar>CXXFLAGS</envar>,
unset them when building Binutils.</para>

<para>Create a separate build directory again:</para>

<screen><userinput>mkdir ../binutils-build
cd ../binutils-build</userinput></screen>

<para>Prepare Binutils for compilation:</para>

<screen><userinput>../binutils-&binutils-version;/configure --prefix=/tools \
    --enable-shared --with-lib-path=/tools/lib</userinput></screen>

<para>The meaning of the new configure option:</para>

<variablelist>
<varlistentry>
<term><parameter>--with-lib-path=/tools/lib</parameter></term>
<listitem><para>This tells the configure script to specify the library
search path during the compilation of Binutils, resulting in <filename
class="directory">/tools/lib</filename> being passed to the linker.
This prevents the linker from searching through library directories on
the host.</para></listitem>
</varlistentry>
</variablelist>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>Compilation is now complete. As discussed earlier, running the
test suite is not mandatory for the temporary tools here in this
chapter. To run the Binutils test suite anyway, issue the following
command:</para>

<screen><userinput>make check</userinput></screen>

<para>Install the package:</para>

<screen><userinput>make install</userinput></screen>

<para>Now prepare the linker for the <quote>Re-adjusting</quote> phase in the next
chapter:</para>

<screen><userinput>make -C ld clean
make -C ld LIB_PATH=/usr/lib:/lib</userinput></screen>


<warning><para><emphasis>Do not</emphasis> remove the Binutils source and
build directories yet. These directories will be needed again in the next
chapter in their current state.</para></warning>

</sect2>

<sect2 role="content"><title/>
<para>Details on this package are located in <xref
linkend="contents-binutils" role="."/></para>
</sect2>

</sect1>

