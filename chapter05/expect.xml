<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE section [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<section xmlns="http://docbook.org/docbook-ng"
         xml:id="ch-tools-expect" xreflabel="Expect" role="wrap">
<title>Expect-&expect-version;</title>
<?dbhtml filename="expect.html"?>

<indexterm zone="ch-tools-expect"><primary sortas="a-Expect">Expect</primary></indexterm>

<section role="package"><title/>
<para>The Expect package contains a program for carrying out scripted dialogues
with other interactive programs.</para>

<segmentedlist>
<segtitle>&buildtime;</segtitle>
<segtitle>&diskspace;</segtitle>
<seglistitem><seg>0.1 SBU</seg><seg>3.9 MB</seg></seglistitem>
</segmentedlist>

<segmentedlist>
<segtitle>Expect installation depends on</segtitle>
<seglistitem><seg>Bash, Binutils, Coreutils, Diffutils,
GCC, Glibc, Grep, Make, Sed, Tcl</seg></seglistitem>
</segmentedlist>
</section>

<section role="installation">
<title>Installation of Expect</title>

<para>First fix a bug that can result in bogus failures during the GCC test
suite run:</para>

<screen><userinput>patch -Np1 -i ../expect-&expect-version;-spawn-1.patch</userinput></screen>

<para>Now prepare Expect for compilation:</para>

<screen><userinput>./configure --prefix=/tools --with-tcl=/tools/lib --with-x=no</userinput></screen>

<para>The meaning of the configure options:</para>

<variablelist>
<varlistentry>
<term><parameter>--with-tcl=/tools/lib</parameter></term>
<listitem><para>This ensures that
the configure script finds the Tcl installation in our temporary tools location.
We don't want it to find an existing one that may possibly reside on the host
system.</para></listitem>
</varlistentry>

<varlistentry>
<term><parameter>--with-x=no</parameter></term>
<listitem><para>This tells the configure
script not to search for Tk (the Tcl GUI component) or the X Window System
libraries, both of which may possibly reside on the host system.</para></listitem>
</varlistentry>
</variablelist>

<para>Build the package:</para>

<screen><userinput>make</userinput></screen>

<para>(If you want to test the results, then issue:
<userinput>make test</userinput>. However, the Expect test suite is known to
experience failures under certain host conditions that are not within our
control. Therefore, test suite failures here are not surprising, and are not
considered critical.)</para>

<para>And install it:</para>

<screen><userinput>make SCRIPTS="" install</userinput></screen>

<para>The meaning of the make parameter:</para>

<variablelist>
<varlistentry>
<term><parameter>SCRIPTS=""</parameter></term>
<listitem><para>This prevents installation
of the supplementary expect scripts which are not needed.</para></listitem>
</varlistentry>
</variablelist>

<para>You can now remove the source directories of both Tcl and Expect.</para>

</section>


<section xml:id="contents-expect" role="content"><title>Contents of Expect</title>

<segmentedlist>
<segtitle>Installed program</segtitle>
<segtitle>Installed library</segtitle>
<seglistitem><seg>expect</seg><seg>libexpect-5.42.a</seg></seglistitem>
</segmentedlist>

<variablelist><title>Short description</title>

<varlistentry xml:id="expect">
<term><command>expect</command></term>
<listitem>
<indexterm zone="ch-tools-expect expect"><primary sortas="b-expect">expect</primary></indexterm>
<para><quote>talks</quote> to other interactive
programs according to a script.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="libexpect">
<term><filename class="libraryfile">libexpect-5.42.a</filename></term>
<listitem>
<para>contains functions that allow Expect to be used as a Tcl extension or to
be used directly from C or C++ (without Tcl)."</para>
<indexterm zone="ch-tools-expect libexpect"><primary
sortas="c-libexpect-5.42">libexpect-5.42</primary></indexterm>
</listitem>
</varlistentry>
</variablelist>

</section>


</section>
