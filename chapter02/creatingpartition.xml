<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="space-creatingpartition">
<title>Creating a New Partition</title>
<?dbhtml filename="creatingpartition.html"?>

<!--Edit Me-->
<para>Like most other operating systems, LFS is usually installed on
a dedicated partition.  If you have an empty partition or enough
unpartitioned space on one of your hard disks to make one, using this
for your LFS installation is recommended.  However, an LFS system (in
fact even multiple LFS systems) may also be installed on a partition
already occupied by another operating system and the different systems
will co-exist peacefully.  The document
<ulink url="&hints-root;/lfs_next_to_existing_systems.txt"/> explains
how to implement this, whereas this book discusses the method of
using a fresh partition for the installation.</para>
<!--End Edit Me-->

<para>A minimal system requires a partition of around 1.3 gigabytes
(GB).  This is enough to store all the source tarballs and compile 
the packages. However, if the LFS system is intended to be the primary
Linux system, additional software will probably be installed which
will require additional space (2 or 3 GB). The LFS system itself will
not take up this much space. A large portion of this required amount
of space is to provide sufficient free temporary space. Compiling
packages can require a lot of disk space which will be reclaimed after
the package is installed.</para>

<para>Because there is not always enough Random Access Memory (RAM)
available for compilation processes, it is a good idea to use a small
disk partition as swap space.  This space is used by the kernel to
store seldom-used data to make room in memory for active processes.
The swap partition for an LFS system can be the same as the one used
by the host system, so another swap partition will not need to be
created if your host system already has one setup.</para>

<para>Start a disk partitioning program such as
<command>cfdisk</command> or <command>fdisk</command> with a command
line option naming the hard disk on which the new partition will be
created&mdash;for example <filename class="devicefile">/dev/hda</filename> for
the primary Integrated Drive Electronics (IDE) disk. Create a Linux native
partition and a swap partition, if needed. Please refer to the man
pages of <command>cfdisk</command> or <command>fdisk</command> if you
do not yet know how to use the programs.</para>

<para>Remember the designation of the new partition (e.g.,
<filename class="devicefile">hda5</filename>). This book will refer to this as the LFS
partition. Also remember the designation of the swap partition. These
names will be needed later for the <filename>/etc/fstab</filename>
file.</para>

<para arch="raq2">On a Cobalt RaQ2/Cube2 we use the existing firmware for a boot loader,
it requires an ext2 revision 0 partition to boot from. So here is the
recommended partition for a Cobalt RaQ2/Cube2 system:</para>

<itemizedlist arch="raq2">
<listitem><para>The first partition should be 50-100 MB.</para></listitem>
<listitem><para>The second partition should be all the remaining space minus the
amount of RAM in the system.</para></listitem>
<listitem><para>The third partition is going to be your swap partition, which will
be the same amount as the RAM installed in the system.</para></listitem>
</itemizedlist>

<para arch="alpha">Alphas have one of 2 BIOSes, Alphaboot or SRM. Some models have both
and you can switch between them at powerup. Each bios has a different
boot method. Milo is cool because it can be blown into flash for a
FAST boot, but its built against an older linux kernel and crashes
with some hardware, like a SCSI controller. aboot is simple if you
can use it, but needs BSD partitions. aboot doesn't really let you do
much at boot time that crosses devices. If you load aboot from hda,
your root needs to be on hda. install aboot on hdb if you want to move
your root to hdb. Once linux is loaded, you can do whatever you want.
Milo can handle loading the kernel from one disk and the root on
another.</para>

<para arch="alpha">If you boot with SRM and aboot, you *MUST* use BSD style partitions.
You *MUST* also leave the first 2 cylinders unused as they will
contain your boot loader. I've read that partition 3 should always be
the full disk even though it overlaps with other partitions, but in my
experience that doesn't matter.  If you choose to not use an EXT2 or
EXT3 root filesystem, you'll need to go through some extra hoops to
install aboot.</para>

<para arch="alpha">If you boot with Milo, use msdos partitions, and make the first
partition large enough for at least 2 kernels (I would use about
500Megs) and make it a FAT filesystem.</para>

</sect1>

