<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE section [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<section xmlns="http://docbook.org/ns/docbook"
         xml:id="ch-system-gettext" xreflabel="Gettext" role="wrap">
<title>Gettext-&gettext-version;</title>
<?dbhtml filename="gettext.html"?>

<indexterm zone="ch-system-gettext"><primary sortas="a-Gettext">Gettext</primary></indexterm>

<section role="package"><title/>
<para>The Gettext package contains utilities for internationalization and
localization. These allow programs to be compiled with Native Language Support
(NLS), enabling them to output messages in the user's native language.</para>

<segmentedlist>
<segtitle>&buildtime;</segtitle>
<segtitle>&diskspace;</segtitle>
<seglistitem><seg>0.5 SBU</seg><seg>55 MB</seg></seglistitem>
</segmentedlist>

<segmentedlist>
<segtitle>Gettext installation depends on</segtitle>
<seglistitem><seg>Bash, Binutils, Bison, Coreutils,
Diffutils, Gawk, GCC, Glibc, Grep, Make, Sed</seg></seglistitem>
</segmentedlist>
</section>

<section role="installation">
<title>Installation of Gettext</title>

<para>Prepare Gettext for compilation:</para>

<screen><userinput>./configure --prefix=/usr</userinput></screen>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>To test the results, issue:
<userinput>make check</userinput>. This takes a very long time, around
7 SBUs.</para>

<para>Now install the package:</para>

<screen><userinput>make install</userinput></screen>

</section>


<section xml:id="contents-gettext" role="content"><title>Contents of Gettext</title>

<segmentedlist>
<segtitle>Installed programs</segtitle>
<segtitle>Installed libraries</segtitle>
<seglistitem><seg>autopoint, config.charset, config.rpath, envsubst, gettext, 
gettextize, hostname, msgattrib, msgcat, msgcmp, msgcomm, msgconv, msgen, 
msgexec, msgfilter, msgfmt, msggrep, msginit, msgmerge, msgunfmt, msguniq, 
ngettext, project-id, team-address, trigger, urlget, user-email and xgettext</seg>
<seg>libasprintf[a,so], libgettextlib[a,so], libgettextpo[a,so] and libgettextsrc[a,so]</seg></seglistitem>
</segmentedlist>

<variablelist><title>Short descriptions</title>

<varlistentry xml:id="autopoint">
<term><command>autopoint</command></term>
<listitem>
<indexterm zone="ch-system-gettext autopoint"><primary sortas="b-autopoint">autopoint</primary></indexterm>
<para>copies standard Gettext infrastructure files into a source package.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="config.charset">
<term><command>config.charset</command></term>
<listitem>
<indexterm zone="ch-system-gettext config.charset"><primary sortas="b-config.charset">config.charset</primary></indexterm>
<para>outputs a system-dependent table of character encoding aliases.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="config.rpath">
<term><command>config.rpath</command></term>
<listitem>
<indexterm zone="ch-system-gettext config.rpath"><primary sortas="b-config.rpath">config.rpath</primary></indexterm>
<para>outputs a system-dependent set of variables, describing how to set the 
runtime search path of shared libraries in an executable.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="envsubst">
<term><command>envsubst</command></term>
<listitem>
<indexterm zone="ch-system-gettext envsubst"><primary sortas="b-envsubst">envsubst</primary></indexterm>
<para>substitutes environment variables in shell format strings.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="gettext">
<term><command>gettext</command></term>
<listitem>
<indexterm zone="ch-system-gettext gettext"><primary sortas="b-gettext">gettext</primary></indexterm>
<para>translates a natural language message into
the user's language, by looking up the translation in a message catalog.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="gettextize">
<term><command>gettextize</command></term>
<listitem>
<indexterm zone="ch-system-gettext gettextize"><primary sortas="b-gettextize">gettextize</primary></indexterm>
<para>copies all standard Gettext files into
the given top-level directory of a package, to begin inter-nationalizing it.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="hostname-gettext">
<term><command>hostname</command></term>
<listitem>
<indexterm zone="ch-system-gettext hostname-gettext"><primary sortas="b-hostname-gettext">hostname</primary></indexterm>
<para>displays a network hostname in various forms.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgattrib">
<term><command>msgattrib</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgattrib"><primary sortas="b-msgattrib">msgattrib</primary></indexterm>
<para>filters the messages of a translation
catalog according to their attributes and manipulates the attributes.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgcat">
<term><command>msgcat</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgcat"><primary sortas="b-msgcat">msgcat</primary></indexterm>
<para>concatenates and merges the given <filename class="extension">.po</filename> files.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgcmp">
<term><command>msgcmp</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgcmp"><primary sortas="b-msgcmp">msgcmp</primary></indexterm>
<para>compares two <filename class="extension">.po</filename>
files to check that both contain the same set of msgid strings.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgcomm">
<term><command>msgcomm</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgcomm"><primary sortas="b-msgcomm">msgcomm</primary></indexterm>
<para>finds the messages that are common to
to the given <filename class="extension">.po</filename> files.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgconv">
<term><command>msgconv</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgconv"><primary sortas="b-msgconv">msgconv</primary></indexterm>
<para>converts a translation catalog to a different character encoding.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgen">
<term><command>msgen</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgen"><primary sortas="b-msgen">msgen</primary></indexterm>
<para>creates an English translation catalog.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgexec">
<term><command>msgexec</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgexec"><primary sortas="b-msgexec">msgexec</primary></indexterm>
<para>applies a command to all translations of a translation catalog.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgfilter">
<term><command>msgfilter</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgfilter"><primary sortas="b-msgfilter">msgfilter</primary></indexterm>
<para>applies a filter to all translations of a translation catalog.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgfmt">
<term><command>msgfmt</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgfmt"><primary sortas="b-msgfmt">msgfmt</primary></indexterm>
<para>generates a binary message catalog from from a translation catalog.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msggrep">
<term><command>msggrep</command></term>
<listitem>
<indexterm zone="ch-system-gettext msggrep"><primary sortas="b-msggrep">msggrep</primary></indexterm>
<para>extracts all messages of a translation
catalog that match a given pattern or belong to some given source files.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msginit">
<term><command>msginit</command></term>
<listitem>
<indexterm zone="ch-system-gettext msginit"><primary sortas="b-msginit">msginit</primary></indexterm>
<para>creates a new <filename class="extension">.po</filename> file, initializing the meta
information with values from the user's environment.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgmerge">
<term><command>msgmerge</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgmerge"><primary sortas="b-msgmerge">msgmerge</primary></indexterm>
<para>combines two raw translations into a single file.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msgunfmt">
<term><command>msgunfmt</command></term>
<listitem>
<indexterm zone="ch-system-gettext msgunfmt"><primary sortas="b-msgunfmt">msgunfmt</primary></indexterm>
<para>decompiles a binary message catalog into raw translation text.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="msguniq">
<term><command>msguniq</command></term>
<listitem>
<indexterm zone="ch-system-gettext msguniq"><primary sortas="b-msguniq">msguniq</primary></indexterm>
<para>unifies duplicate translations in a translation catalog.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="ngettext">
<term><command>ngettext</command></term>
<listitem>
<indexterm zone="ch-system-gettext ngettext"><primary sortas="b-ngettext">ngettext</primary></indexterm>
<para>displays native language translations of a
textual message whose grammatical form depends on a number.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="xgettext">
<term><command>xgettext</command></term>
<listitem>
<indexterm zone="ch-system-gettext xgettext"><primary sortas="b-xgettext">xgettext</primary></indexterm>
<para>extracts the translatable message lines
from the given source files, to make the first translation template.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="libasprintf">
<term><filename class="libraryfile">libasprintf</filename></term>
<listitem>
<indexterm zone="ch-system-gettext libasprintf"><primary sortas="c-libasprintf">libasprintf</primary></indexterm>
<para>defines the autosprintf class, which
makes C formatted output routines usable in C++ programs, for use with the
&lt;string&gt; strings and the &lt;iostream&gt; streams.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="libgettextlib">
<term><filename class="libraryfile">libgettextlib</filename></term>
<listitem>
<indexterm zone="ch-system-gettext libgettextlib"><primary sortas="c-libgettextlib">libgettextlib</primary></indexterm>
<para>is a private library containing common routines used by the various Gettext
programs. They're not meant for general use.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="libgettextpo">
<term><filename class="libraryfile">libgettextpo</filename></term>
<listitem>
<indexterm zone="ch-system-gettext libgettextpo"><primary sortas="c-libgettextpo">libgettextpo</primary></indexterm>
<para>is used to write specialized programs that process <filename 
class="extension">.po</filename> files. This library is
used when the standard applications shipped with Gettext won't suffice (such as
<command>msgcomm</command>, <command>msgcmp</command>, 
<command>msgattrib</command> and <command>msgen</command>).</para>
</listitem>
</varlistentry>

<varlistentry xml:id="libgettextsrc">
<term><filename class="libraryfile">libgettextsrc</filename></term>
<listitem>
<indexterm zone="ch-system-gettext libgettextsrc"><primary sortas="c-libgettextsrc">libgettextsrc</primary></indexterm>
<para>is a private library containing common routines used by the various Gettext 
programs. They're not meant for general use.</para>
</listitem>
</varlistentry>
</variablelist>

</section>

</section>
