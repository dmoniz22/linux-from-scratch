<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE section [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<section xmlns="http://docbook.org/docbook-ng"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="ch-system-vim" xreflabel="Vim" role="wrap">
<title>Vim-&vim-version;</title>
<?dbhtml filename="vim.html"?>

<indexterm zone="ch-system-vim"><primary sortas="a-Vim">Vim</primary></indexterm>

<section role="package"><title/>
<para>The Vim package contains a powerful text editor.</para>

<segmentedlist>
<segtitle>&buildtime;</segtitle>
<segtitle>&diskspace;</segtitle>
<seglistitem><seg>0.4 SBU</seg><seg>34 MB</seg></seglistitem>
</segmentedlist>

<segmentedlist>
<segtitle>Vim installation depends on</segtitle>
<seglistitem><seg>Bash, Binutils, Coreutils, Diffutils,
GCC, Glibc, Grep, Make, Ncurses, Sed</seg></seglistitem>
</segmentedlist>

<tip>
<title>Alternatives to Vim</title>
<para>If you prefer another editor -- like Emacs, Joe, or Nano -- to Vim,
have a look at <link xlink:href="&blfs-root;view/stable/postlfs/editors.html"/> for
suggested installation instructions.</para>
</tip>
</section>

<section role="installation">
<title>Installation of Vim</title>

<para>First, unpack both
<filename>vim-&vim-version;.tar.bz2</filename> and (optionally)
<filename>vim-&vim-version;-lang.tar.gz</filename> archives into the same
directory. Then change the default locations of the <filename>vimrc</filename> and
<filename>gvimrc</filename> configuration files to <filename class="directory">/etc</filename>.</para>

<screen><userinput>echo '#define SYS_VIMRC_FILE "/etc/vimrc"' &gt;&gt; src/feature.h
echo '#define SYS_GVIMRC_FILE "/etc/gvimrc"' &gt;&gt; src/feature.h</userinput></screen>

<para>Now prepare Vim for compilation:</para>

<screen><userinput>./configure --prefix=/usr --enable-multibyte</userinput></screen>

<para>The optional but highly recommended
<parameter>--enable-multibyte</parameter> switch
includes support for editing files in multibyte character encodings into
<command>vim</command>.
It is needed for those people who ignore our recommendation not to
use LFS in locales with multibyte character sets. It is also needed for
people who want to be able to edit text files initially created
in Linux distributions like Fedora Core
that use UTF-8 as a default character set.</para>

<para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

<para>To test the results, you can issue:
<userinput>make test</userinput>. However, this test suite outputs a lot of
seemingly garbage characters to the screen, and this can wreak havoc with the
settings of the current terminal. Therefore the running of the test suite here
is strictly optional.</para>

<para>Now install the package:</para>

<screen><userinput>make install</userinput></screen>

<para>Many users are used to using <command>vi</command>, instead of
<command>vim</command>. To let them execute <command>vim</command> when
they habitually enter <command>vi</command>, create a symlink:</para>

<screen><userinput>ln -s vim /usr/bin/vi</userinput></screen>

<para>If you are going to install the X Window System on your LFS system, you
may want to re-compile Vim after having installed X. Vim comes with a nice GUI
version of the editor that requires X and a few other libraries to be
installed. For more information read the Vim documentation.</para>

</section>


<section xml:id="conf-vim" role="configuration"><title>Configuring Vim</title>
<indexterm zone="conf-vim"><primary sortas="e-/etc/vim">/etc/vim</primary></indexterm>

<para>By default, <command>vim</command> runs in vi-incompatible mode. Some
people might not like this, but we prefer to run <command>vim</command> in its
own mode (else we wouldn't have included it in this book, but the original
<command>vi</command>). We've included the setting of <quote>nocompatible</quote>
below to high-light the fact that the new behavior is being used. It
also reminds those who would change to <quote>compatible</quote> mode that it should
appear first because it changes other settings and overrides must come
after this setting. Create a default vim configuration file by running
the following:</para>

<screen><userinput>cat &gt; /etc/vimrc &lt;&lt; "EOF"
" Begin /etc/vimrc

set nocompatible
set backspace=2
syntax on
<!-- set fileencodings=ucs-bom,utf-8,<replaceable>[your-8-bit-charset]</replaceable> -->
if (&amp;term == "iterm") || (&amp;term == "putty")
  set background=dark
endif

" End /etc/vimrc
EOF</userinput></screen>

<para>The <parameter>set nocompatible</parameter> makes
<command>vim</command> behave in a more useful way (the default) than the
vi-compatible manner. Remove the <quote>no</quote> if you want the old <command>vi</command>
behavior. The <parameter>set backspace=2</parameter> allows
backspacing over line breaks, autoindents and the start of insert. The
<parameter>syntax on</parameter> enables <command>vim</command>'s
syntax highliting.
<!-- XXX: the ascii-only files are considered to be in utf-8 - that's not what
one expects . That's why fileencodings stuff is commented out for now

The <parameter>set fileencodings=...</parameter> makes
<command>vim</command> capable of automatically detecting the character
set of the file being edited (replace
"<replaceable>[your-8-bit-charset]</replaceable>"
with the value appropriate for your country, e.g. iso-8859-15 in Italy).
This line is useful because bleeding-edge distributions
like Fedora Core use UTF-8, and conservative ones like Debian
use traditional 8-bit encodings for text files. If you have not
passed the <parameter>- -enable-multibyte</parameter> switch to the
<command>./configure</command> command above, this line will not work. -->
Finally, the <emphasis>if</emphasis> statement with the
<parameter>set background=dark</parameter> corrects <command>vim</command>'s
guess about the background color of some terminal emulators. This gives the
highliting a better color scheme for use on the black background of
these programs.
</para>

<para>Documentation for other available options can be obtained by running
the following command:</para>

<screen><userinput>vim -c ':options'</userinput></screen>

</section>


<section xml:id="contents-vim" role="content"><title>Contents of Vim</title>

<segmentedlist>
<segtitle>Installed programs</segtitle>
<seglistitem><seg>efm_filter.pl, efm_perl.pl, ex (link to vim), less.sh, mve.awk, 
pltags.pl, ref, rview (link to vim), rvim (link to vim), shtags.pl, tcltags, vi (link to vim), 
view (link to vim), vim, vim132, vim2html.pl, vimdiff (link to vim), vimm, vimspell.sh, 
vimtutor and xxd</seg></seglistitem>
</segmentedlist>

<variablelist><title>Short descriptions</title>

<varlistentry xml:id="efm_filter.pl">
<term><command>efm_filter.pl</command></term>
<listitem>
<indexterm zone="ch-system-vim efm_filter.pl"><primary sortas="b-efm_filter.pl">efm_filter.pl</primary></indexterm>
<para>is a filter for creating an error file that can be read by <command>vim</command>.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="efm_perl.pl">
<term><command>efm_perl.pl</command></term>
<listitem>
<indexterm zone="ch-system-vim efm_perl.pl"><primary sortas="b-efm_perl.pl">efm_perl.pl</primary></indexterm>
<para>reformats the error messages of the
Perl interpreter for use with the <quote>quickfix</quote> mode of <command>vim</command>.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="ex">
<term><command>ex</command></term>
<listitem>
<indexterm zone="ch-system-vim ex"><primary sortas="b-ex">ex</primary></indexterm>
<para>starts <command>vim</command> in ex mode.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="less.sh">
<term><command>less.sh</command></term>
<listitem>
<indexterm zone="ch-system-vim less.sh"><primary sortas="b-less.sh">less.sh</primary></indexterm>
<para>is a script that starts <command>vim</command> with less.vim.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="mve.awk">
<term><command>mve.awk</command></term>
<listitem>
<indexterm zone="ch-system-vim mve.awk"><primary sortas="b-mve.awk">mve.awk</primary></indexterm>
<para>processes <command>vim</command> errors.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="pltags.pl">
<term><command>pltags.pl</command></term>
<listitem>
<indexterm zone="ch-system-vim pltags.pl"><primary sortas="b-pltags.pl">pltags.pl</primary></indexterm>
<para>creates a tags file for Perl code, for use by <command>vim</command>.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="ref">
<term><command>ref</command></term>
<listitem>
<indexterm zone="ch-system-vim ref"><primary sortas="b-ref">ref</primary></indexterm>
<para>checks the spelling of arguments.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="rview">
<term><command>rview</command></term>
<listitem>
<indexterm zone="ch-system-vim rview"><primary sortas="b-rview">rview</primary></indexterm>
<para>is a restricted version of <command>view</command>: no shell
commands can be started and <command>view</command> can't be suspended.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="rvim">
<term><command>rvim</command></term>
<listitem>
<indexterm zone="ch-system-vim rvim"><primary sortas="b-rvim">rvim</primary></indexterm>
<para>is a restricted version of <command>vim</command>: no shell
commands can be started and <command>vim</command> can't be suspended.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="shtags.pl">
<term><command>shtags.pl</command></term>
<listitem>
<indexterm zone="ch-system-vim shtags.pl"><primary sortas="b-shtags.pl">shtags.pl</primary></indexterm>
<para>generates a tag file for Perl scripts.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="tcltags">
<term><command>tcltags</command></term>
<listitem>
<indexterm zone="ch-system-vim tcltags"><primary sortas="b-tcltags">tcltags</primary></indexterm>
<para>generates a tag file for TCL code.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="view">
<term><command>view</command></term>
<listitem>
<indexterm zone="ch-system-vim view"><primary sortas="b-view">view</primary></indexterm>
<para>starts <command>vim</command> in read-only mode.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="vim">
<term><command>vim</command></term>
<listitem>
<indexterm zone="ch-system-vim vim"><primary sortas="b-vim">vim</primary></indexterm>
<para>is the editor.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="vim132">
<term><command>vim132</command></term>
<listitem>
<indexterm zone="ch-system-vim vim132"><primary sortas="b-vim132">vim132</primary></indexterm>
<para>starts <command>vim</command> with the terminal in 132-column mode.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="vim2html.pl">
<term><command>vim2html.pl</command></term>
<listitem>
<indexterm zone="ch-system-vim vim2html.pl"><primary sortas="b-vim2html.pl">vim2html.pl</primary></indexterm>
<para>converts Vim documentation to HTML.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="vimdiff">
<term><command>vimdiff</command></term>
<listitem>
<indexterm zone="ch-system-vim vimdiff"><primary sortas="b-vimdiff">vimdiff</primary></indexterm>
<para>edits two or three versions of a file with <command>vim</command> and show differences.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="vimm">
<term><command>vimm</command></term>
<listitem>
<indexterm zone="ch-system-vim vimm"><primary sortas="b-vimm">vimm</primary></indexterm>
<para>enables the DEC locator input model on a remote terminal.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="vimspell.sh">
<term><command>vimspell.sh</command></term>
<listitem>
<indexterm zone="ch-system-vim vimspell.sh"><primary sortas="b-vimspell.sh">vimspell.sh</primary></indexterm>
<para>is a script which spells a file and generates the syntax statements necessary 
to highlight in <command>vim</command>. This script requires the old Unix <command>spell</command>
command, which is provided neither in LFS nor in BLFS.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="vimtutor">
<term><command>vimtutor</command></term>
<listitem>
<indexterm zone="ch-system-vim vimtutor"><primary sortas="b-vimtutor">vimtutor</primary></indexterm>
<para>teaches you the basic keys and commands of <command>vim</command>.</para>
</listitem>
</varlistentry>

<varlistentry xml:id="xxd">
<term><command>xxd</command></term>
<listitem>
<indexterm zone="ch-system-vim xxd"><primary sortas="b-xxd">xxd</primary></indexterm>
<para>makes a hex dump of the given file. It can
also do the reverse, so it can be used for binary patching.</para>
</listitem>
</varlistentry>
</variablelist>

</section>

</section>
